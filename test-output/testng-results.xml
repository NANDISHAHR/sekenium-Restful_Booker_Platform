<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-27T14:32:28 IST" name="Default suite" finished-at="2022-06-27T14:32:47 IST" duration-ms="19612">
    <groups>
    </groups>
    <test started-at="2022-06-27T14:32:28 IST" name="Default test" finished-at="2022-06-27T14:32:47 IST" duration-ms="19612">
      <class name="Errorhandling.PhonenumberFieldErrorshandling">
        <test-method is-config="true" signature="initializeExtendReports()[pri:0, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:28 IST" name="initializeExtendReports" finished-at="2022-06-27T14:32:28 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeExtendReports -->
        <test-method is-config="true" signature="InitialiseBrowser(org.testng.ITestContext,java.lang.String)[pri:0, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:28 IST" name="InitialiseBrowser" finished-at="2022-06-27T14:32:34 IST" duration-ms="6301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6dc9da2d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitialiseBrowser -->
        <test-method signature="ScrollingIntoFormPage()[pri:1, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:34 IST" name="ScrollingIntoFormPage" finished-at="2022-06-27T14:32:34 IST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScrollingIntoFormPage -->
        <test-method is-config="true" signature="CheckStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:34 IST" name="CheckStatus" finished-at="2022-06-27T14:32:34 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Errorhandling.PhonenumberFieldErrorshandling.ScrollingIntoFormPage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ScrollingIntoFormPage status=SUCCESS method=PhonenumberFieldErrorshandling.ScrollingIntoFormPage()[pri:1, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatus -->
        <test-method signature="InputFiledsErrors()[pri:2, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:34 IST" name="InputFiledsErrors" finished-at="2022-06-27T14:32:36 IST" duration-ms="1706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputFiledsErrors -->
        <test-method is-config="true" signature="CheckStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:36 IST" name="CheckStatus" finished-at="2022-06-27T14:32:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Errorhandling.PhonenumberFieldErrorshandling.InputFiledsErrors() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=InputFiledsErrors status=SUCCESS method=PhonenumberFieldErrorshandling.InputFiledsErrors()[pri:2, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatus -->
        <test-method signature="PhoneNumberError1()[pri:3, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:36 IST" name="PhoneNumberError1" finished-at="2022-06-27T14:32:37 IST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PhoneNumberError1 -->
        <test-method is-config="true" signature="CheckStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:37 IST" name="CheckStatus" finished-at="2022-06-27T14:32:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Errorhandling.PhonenumberFieldErrorshandling.PhoneNumberError1() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=PhoneNumberError1 status=SUCCESS method=PhonenumberFieldErrorshandling.PhoneNumberError1()[pri:3, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatus -->
        <test-method signature="PhoneNumberError2()[pri:4, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:37 IST" name="PhoneNumberError2" finished-at="2022-06-27T14:32:47 IST" duration-ms="10204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PhoneNumberError2 -->
        <test-method is-config="true" signature="CheckStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:47 IST" name="CheckStatus" finished-at="2022-06-27T14:32:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Errorhandling.PhonenumberFieldErrorshandling.PhoneNumberError2() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=PhoneNumberError2 status=SUCCESS method=PhonenumberFieldErrorshandling.PhoneNumberError2()[pri:4, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatus -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:47 IST" name="teardown" finished-at="2022-06-27T14:32:47 IST" duration-ms="295" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Email Field error message displayed is wrongly expected [must not be empty
size must be between 11 and 21] but found [size must be between 11 and 21
must not be empty]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Email Field error message displayed is wrongly expected [must not be empty
size must be between 11 and 21] but found [size must be between 11 and 21
must not be empty]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at common.BaseTest.teardown(BaseTest.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:645)
at org.testng.TestRunner.afterRun(TestRunner.java:893)
at org.testng.TestRunner.run(TestRunner.java:606)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="generateExtentReport()[pri:0, instance:Errorhandling.PhonenumberFieldErrorshandling@4c12331b]" started-at="2022-06-27T14:32:47 IST" name="generateExtentReport" finished-at="2022-06-27T14:32:47 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateExtentReport -->
      </class> <!-- Errorhandling.PhonenumberFieldErrorshandling -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
